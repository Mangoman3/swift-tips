<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<playground version='6.0' target-platform='ios' display-mode='raw'>
    <pages>
        <page name='01 - Using map on optional values'/>
        <page name='02 - Generating all cases for an Enum'/>
        <page name='03 - Encapsulating state within a function'/>
        <page name='04 - Typealiases for functions'/>
        <page name='05 - Defining operators on function types'/>
        <page name='06 - Storing functions rather than values'/>
        <page name='07 - Implementing the builder pattern with keypaths'/>
        <page name='08 - Achieving systematic validation of data'/>
        <page name='09 - Implicit initialization from literal values'/>
        <page name='10 - Observing new and old value with RxSwift'/>
        <page name='11 - Using @autoclosure for cleaner call sites'/>
        <page name='12 - Easily generating arrays of data'/>
        <page name='13 - Simplifying complex conditions with pattern matching'/>
        <page name='14 - Manufacturing cache-efficient versions of pure functions'/>
        <page name='15 - Concise syntax for sorting using a KeyPath'/>
        <page name='16 - Easier String slicing using ranges'/>
        <page name='17 - Safely subscripting a Collection'/>
        <page name='18 - Comparing Optionals through Conditional Conformance'/>
        <page name='19 - Making good use of #file, #line and #function'/>
        <page name='20 - Running two pieces of code in parallel'/>
        <page name='21 - Measuring execution time with minimum boilerplate'/>
        <page name='22 - Using parallelism to speed-up map()'/>
        <page name='23 - Dealing with expirable values'/>
        <page name='24 - A shorter syntax to remove nil values'/>
        <page name='25 - Defining a function to map over dictionaries'/>
        <page name='26 - Retrieving all the necessary data to build a debug view'/>
        <page name='27 - Encapsulating background computation and UI update'/>
        <page name='28 - Shorter syntax to deal with optional strings'/>
        <page name='29 - Removing duplicate values from a Sequence'/>
        <page name='30 - Providing useful operators for Optional booleans'/>
        <page name='31 - Debouncing a function call'/>
        <page name='32 - Performing animations sequentially'/>
        <page name='33 - Small footprint type-erasing with functions'/>
        <page name='34 - Asserting that classes have associated NIBs and vice-versa'/>
        <page name='35 - Defining a union type'/>
        <page name='36 - Avoiding hardcoded reuse identifiers'/>
        <page name='37 - Optimizing the use of `reduce()`'/>
        <page name='38 - Writing an interruptible overload of `forEach`'/>
        <page name='39 - Using `typealias` to its fullest'/>
        <page name='40 - Lightweight data-binding for an MVVM implementation'/>
        <page name='41 - Bringing some type-safety to a userInfo Dictionary'/>
        <page name='42 - Using KeyPaths instead of closures'/>
        <page name='43 - Transform an asynchronous function into a synchronous one'/>
        <page name='44 - Solving callback hell with function composition'/>
        <page name='45 - Getting rid of overabundant `[weak self]` and `guard`'/>
        <page name='46 - Lightweight dependency injection through protocol-oriented programming'/>
        <page name='47 - Another lightweight dependency injection through default values for function parameters'/>
        <page name='48 - Providing a default value to a `Decodable` `enum`'/>
        <page name='49 - Using `Never` to represent impossible code paths'/>
        <page name='50 - Implementing a namespace through an empty `enum`'/>
        <page name='51 - Defining a custom `init` without loosing the compiler-generated one'/>
        <page name='52 - Avoiding double negatives within `guard` statements'/>
        <page name='53 - Using `switch` and `if` as expressions'/>
        <page name='54 - Composing `NSAttributedString` through a Function Builder'/>
        <page name='55 - Implementing pseudo-inheritance between `structs`'/>
        <page name='56 - Localization through `String` interpolation'/>
        <page name='57 - Property Wrappers as Debugging Tools'/>
    </pages>
</playground>